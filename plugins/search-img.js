/*‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫
    ‚≠êÔº∞Ôº≤ÔºØÔº™Ôº•Ôº£Ôº¥ ÔºÆÔº°Ôº≠Ôº•:
    Ôº≥ÔºµÔº¢Ôº∫Ôº•Ôº≤ÔºØ Ôº∑Ôº®Ôº°Ôº¥Ôº≥Ôº°Ôº∞Ôº∞ Ôº≠Ôº§ Ôº¢ÔºØÔº¥
    
    ‚≠êÔº§Ôº•Ôº∂Ôº•Ôº¨ÔºØÔº∞Ôº•Ôº≤
     Ôº≠Ôº≤ Ôº¶Ôº≤Ôº°ÔºÆÔº´ 
     
    ‚≠ê Ôº≠Ôºπ Ôº¥Ôº•Ôº°Ôº≠
     Ôº∏Ôº•Ôº≤ÔºØ Ôº£ÔºØÔº§Ôº•Ôº≤Ôº≥
     
    ‚≠ê ÔºØÔºµÔº≤ Ôº∑Ôº•Ôº¢Ôº≥Ôº©Ôº¥Ôº•
     https://github.com/ZwSyntax/SUBZERO-MD

¬© Ôº¥Ôº≤Ôºπ Ôº§Ôº•Ôº£Ôº≤ÔºπÔº∞Ôº¥Ôº©ÔºÆÔºß Ôº©Ôº¶ ÔºπÔºØÔºµ Ôº£Ôº°ÔºÆ‚ö†

‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫‚ï∫*/




const { cmd, commands } = require("../command");
const axios = require("axios");

cmd({
    pattern: "img",
    alias: ["pictures", "image", "pin"],
    react: "üîç",
    desc: "Search and download Pinterest images using the API.",
    category: "fun",
    use: ".pin <keywords>",
    filename: __filename
}, async (conn, mek, m, { reply, args, from }) => {
    try {
        const query = args.join(" ");
        if (!query) {
            return reply("*Please provide a search query. *Eg* .img bmw m4*");
        }

        
        await reply(`*üîÑ Downloading images of ${query}...*`);


        const url = `https://rubenbot-subzero-api.hf.space/download/piniimg?text=${encodeURIComponent(query)}`;
        const response = await axios.get(url);

        // Validate response
        if (!response.data || !response.data.result || response.data.result.length === 0) {
            return reply("*No results found. Please try another keyword.*");
        }

        const results = response.data.result;  
        const selectedImages = results.sort(() => 0.5 - Math.random()).slice(0, 5);
      
        for (let i = 0; i < selectedImages.length; i++) {
            const image = selectedImages[i];
            await conn.sendMessage(
                from,
                {
                    image: { url: image.src },
                    caption: `*¬© G·¥á…¥·¥á Ä·¥Ä·¥õ·¥á·¥Ö  ô è S·¥ú ôZ·¥á Ä·¥è*`
                },
                { quoted: mek }
            );
        }
    } catch (error) {
        console.error(error);
        reply("*‚ùå An error occurred while processing your request. Please try again later.*");
    }
});


